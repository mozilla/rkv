name: CI Build Status

on: [push, pull_request]

env:
  RUST_BACKTRACE: 1

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        toolchain: [1.45.0, stable, beta, nightly]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Install Rust toolchain ${{ matrix.toolchain }} on ${{ matrix.os }}
        run: |
          rustup toolchain install ${{ matrix.toolchain }} --profile minimal --component rustfmt clippy
          rustup default ${{ matrix.toolchain }}

      - run: cargo fmt --all -- --check
      - run: cargo clippy --all-features -- -D warnings
      - run: cargo build --verbose

      - name: Test with all features
        continue-on-error: ${{ matrix.toolchain == 'nightly' }}
        run: cargo test --all --verbose

      - name: Test with no default features
        continue-on-error: ${{ matrix.toolchain == 'nightly' }}
        run: cargo test --lib --no-default-features --verbose

      - name: Test with db-dup-sort
        continue-on-error: ${{ matrix.toolchain == 'nightly' }}
        run: cargo test --lib --no-default-features --features "db-dup-sort" --verbose

      - name: Test with db-int-key
        continue-on-error: ${{ matrix.toolchain == 'nightly' }}
        run: cargo test --lib --no-default-features --features "db-int-key" --verbose

      - name: Test in release mode
        continue-on-error: ${{ matrix.toolchain == 'nightly' }}
        run: cargo test --release --all --verbose

      - name: Run all examples
        continue-on-error: ${{ matrix.toolchain == 'nightly' }}
        run: ./run-all-examples.sh
