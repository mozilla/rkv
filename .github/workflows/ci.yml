name: CI Build Status

on: [push, pull_request]

env:
  RUST_BACKTRACE: 1

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        toolchain: [1.45.0, stable, beta, nightly]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Install Rust toolchain ${{ matrix.toolchain }} on ${{ matrix.os }}
        run: |
          rustup toolchain install ${{ matrix.toolchain }} --profile minimal --component rustfmt clippy
          rustup default ${{ matrix.toolchain }}

      # We install a known-to-have-rustfmt version of the nightly toolchain
      # in order to run the nightly version of rustfmt, which supports rules
      # that we depend upon. When updating, pick a suitable nightly version
      # from https://rust-lang.github.io/rustup-components-history/
      # See .rustfmt.toml for the list of unstable features.
      - if: ${{ matrix.toolchain == 'nightly' && matrix.os == 'ubuntu-latest' }}
        env:
          KNOWN_TO_HAVE_RUSTFMT: nightly-2022-06-07
        run: |
          rustup toolchain install $KNOWN_TO_HAVE_RUSTFMT --profile minimal --component rustfmt clippy
          cargo +$KNOWN_TO_HAVE_RUSTFMT fmt --all -- --check

      - run: cargo clippy --all-features -- -D warnings
      - run: cargo build --verbose

      - name: Test with all features
        run: cargo test --all --verbose

      - name: Test with no default features
        run: cargo test --lib --no-default-features --verbose

      - name: Test with db-dup-sort
        run: cargo test --lib --no-default-features --features "db-dup-sort" --verbose

      - name: Test with db-int-key
        run: cargo test --lib --no-default-features --features "db-int-key" --verbose

      - name: Test in release mode
        run: cargo test --release --all --verbose

      - name: Run all examples
        run: ./run-all-examples.sh
