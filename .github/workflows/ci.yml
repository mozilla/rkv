name: Node CI

on: [push, pull_request]

env:
  RUST_BACKTRACE: 1

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        toolchain: [1.45.0, stable, beta, nightly]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
          components: rustfmt, clippy

      - name: Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features -- -D warnings

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose

      - name: Test with all features
        continue-on-error: ${{ matrix.toolchain == 'nightly' }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --verbose

      - name: Test with no default features
        continue-on-error: ${{ matrix.toolchain == 'nightly' }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --lib --no-default-features --verbose

      - name: Test with db-dup-sort
        continue-on-error: ${{ matrix.toolchain == 'nightly' }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --lib --no-default-features --features "db-dup-sort" --verbose

      - name: Test with db-int-key
        continue-on-error: ${{ matrix.toolchain == 'nightly' }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --lib --no-default-features --features "db-int-key" --verbose

      - name: Test in release mode
        continue-on-error: ${{ matrix.toolchain == 'nightly' }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --all --verbose

      - name: Run all examples
        continue-on-error: ${{ matrix.toolchain == 'nightly' }}
        run: ./run-all-examples.sh
